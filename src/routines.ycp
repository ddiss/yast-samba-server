/**
 * File:	include/samba-server/routines.ycp
 * Package:	Configuration of samba-server
 * Summary:	Miscelanous functions for configuration of samba-server.
 * Authors:	Stanislav Visnovsky <visnov@suse.cz>
 *
 * $Id$
 */

{

textdomain "samba-server";

/********************************** non UI routines ************************/

/**
 * Convert string value to a normalized boolean ("yes", "1", "true" -> true).
 * @param value		the string value
 * @param default	the default value for value == nil
 * @return boolean	the converted value or default
 */
boolean normalize_boolean( string value, boolean default ) ``{
    if( value == nil ) return default;
    string s = toupper( value );
    return ( s == "YES" || s == "1" || s == "TRUE" );
}

/**
 * Convert string value to a normalized string ("yes", "1", "true" -> true).
 * Used if the smb.conf value can be also "auto". Then do not change the value.
 * @param value		the string value
 * @param default	the default value for value == nil
 * @return string	the converted value or default
 */
string normalize_string( string value, string default ) ``{
    if( value == nil ) return default;
    string s = toupper( value );
    if ( s == "YES" || s == "1" || s == "TRUE" ) return "yes";
    if ( s == "NO" || s == "0" || s == "FALSE" ) return "no";
    return value;
}

/**
 * Return true, if the value is yes or auto (= enabled).
 *
 * @param value		string value
 * @return boolean	true if it is yes or auto
 */
boolean yes_or_auto( string value ) ``{
    return toupper( value ) == "AUTO" || normalize_boolean( value, false);
}

/**
 * Convert share description to items for a table (index, status, name, comment).
 *
 * @param shares	map of available shares
 * @return list 	list of table items
 */
list shares2items( map<string,map> shares ) ``{
    integer index = 0;
    return maplist( string name, map descr, shares, ``{ index = index+1; return `item( `id(index), descr["commentout"]:false ? _("Disabled"): _("Enabled") , name, descr["path"]:"", descr["comment"]:"" ); }  );
}

/**
 * Test, if the share is enabled = available and not turned off by YaST.
 *
 * @param options	description of the share
 * @return boolean	true if the share is enabled
 */
boolean shareEnabled( map options ) ``{
    boolean result = !( options["commentout"]:false );
    
    if( result ) result = normalize_boolean(options["available"]:"yes", true);
    
    return result;
}

/**
 * Convert printer description to items for a multiselectionbox (index, printer name, status).
 *
 * @param printers	map of available printers
 * @return list 	list of box items
 */
list printers2items( map<string,boolean> printers ) ``{
    return maplist( string name, boolean value, printers, ``{
	return `item( `id( name ), name , value );
    });
}

/* EOF */
}
